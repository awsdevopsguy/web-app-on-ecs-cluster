version: 0.2

phases:
  install:
    commands:
      - echo Installing kubectl...
      - curl -LO "https://amazon-eks.s3.us-west-2.amazonaws.com/1.21.9/2022-03-01/bin/linux/amd64/kubectl" # Update the version and URL as needed
      - chmod +x ./kubectl
      - mv ./kubectl /usr/local/bin
      - echo "kubectl installed"

  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com

  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...          
      - docker build -t $IMAGE_REPO_NAME:$IMAGE_TAG .
      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG      

  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
      
      # Uncomment for ECS deployment
      # echo Creating imagedefinitions.json...
      # printf '[{"name":"%s","imageUri":"%s"}]' $ECS_SERVICE_NAME $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG > imagedefinitions.json
      # echo Updating ECS service...
      # aws ecs update-service --cluster <ecs_cluster_name> --service $ECS_SERVICE_NAME --force-new-deployment
      # echo "ECS deployment triggered successfully!"

      # Deploy to EKS
      - echo Configuring kubectl to access EKS...
      - aws eks --region $AWS_DEFAULT_REGION update-kubeconfig --name $EKS_CLUSTER_NAME # Specify your EKS cluster name
      - echo Deploying to EKS...
      - kubectl set image deployment/$EKS_DEPLOYMENT_NAME $EKS_CONTAINER_NAME=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG --record
      - kubectl rollout status deployment/$EKS_DEPLOYMENT_NAME
      - echo "EKS deployment updated successfully!"

artifacts:
  files:
    # Uncomment if you want to keep track of deployment artifacts
    # - imagedefinitions.json
